INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:35 Got response  200 OK from http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:35 Got response  200 OK from http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:35 Got response  200 OK from http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:35 Got response  200 OK from http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:26 Make GET request to http://localhost:8000/api/v1/courses?userId=4ab9898b-1cba-41c9-9c76-7266321bd558
INFO     HTTP_LOGGER:event_hooks.py:35 Got response  200 OK from http://localhost:8000/api/v1/courses?userId=4ab9898b-1cba-41c9-9c76-7266321bd558
INFO     BASE_ASSERTIONS:base.py:18 Check that response status code equals to {expected}
INFO     COURSES_ASSERTIONS:courses.py:66 Check get courses response
INFO     BASE_ASSERTIONS:base.py:63 Check that length of "courses" equals to 1
INFO     COURSES_ASSERTIONS:courses.py:41 Check course
INFO     BASE_ASSERTIONS:base.py:36 Check that "id" equals to "933b3e8b-d5c5-451e-b6e6-780ab5f3de74"
INFO     BASE_ASSERTIONS:base.py:36 Check that "title" equals to "Base whether film price approach."
INFO     BASE_ASSERTIONS:base.py:36 Check that "max_score" equals to "66"
INFO     BASE_ASSERTIONS:base.py:36 Check that "min_score" equals to "9"
INFO     BASE_ASSERTIONS:base.py:36 Check that "description" equals to "Chance rest go keep win spend. Leave particular service minute tree it.
Himself enter need later method daughter. Cold stock bed anything yes. True rock purpose."
INFO     BASE_ASSERTIONS:base.py:36 Check that "estimated_time" equals to "2 weeks"
INFO     FILES_ASSERTIONS:files.py:39 Check file
INFO     BASE_ASSERTIONS:base.py:36 Check that "id" equals to "b80e4baf-fa38-49de-a43c-02eb7db41ac6"
INFO     BASE_ASSERTIONS:base.py:36 Check that "url" equals to "http://localhost:8000/static/tests/f7312e59-b351-4cec-80bf-9fc9102667b6.png"
INFO     BASE_ASSERTIONS:base.py:36 Check that "filename" equals to "f7312e59-b351-4cec-80bf-9fc9102667b6.png"
INFO     BASE_ASSERTIONS:base.py:36 Check that "directory" equals to "tests"
INFO     USERS_ASSERTIONS:users.py:34 Check user
INFO     BASE_ASSERTIONS:base.py:36 Check that "id" equals to "4ab9898b-1cba-41c9-9c76-7266321bd558"
INFO     BASE_ASSERTIONS:base.py:36 Check that "email" equals to "paulellis@example.net"
INFO     BASE_ASSERTIONS:base.py:36 Check that "last_name" equals to "Swanson"
INFO     BASE_ASSERTIONS:base.py:36 Check that "first_name" equals to "Andrea"
INFO     BASE_ASSERTIONS:base.py:36 Check that "middle_name" equals to "Joshua"
INFO     SCHEMA_ASSERTIONS:schema.py:20 Validate JSON schema